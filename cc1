#!/bin/bash

#if [[ -z "${CFLAGS}" ]]; then
#    CFLAGS="-Wall -Wextra -Wstrict-prototypes -Wmissing-prototypes -Wshadow -Wconversion -g -lm -lpthread" 
#fi

# use either "-fopenmp" or "-lgopm" works with gcc, but does not work with clang
# 
CFLAGS="${CFLAGS} -Wall -Wextra -Wstrict-prototypes -Wmissing-prototypes -Wshadow -Wconversion -g -lm -lpthread -lgomp -lrt"

if [[ -z "${CC}" ]]; then
    CC="gcc"
fi
if [[ -z "${CPP}" ]]; then
    CPP="g++"
fi

if [[ -z "$1" ]]; then
    printf '\nUsage: cc1 filename_without.c'
    echo
    printf '\n\t Example: cc1 hello.c\n\n' 
    exit 1
fi

LOOP=0
while [[ ! -z "$1" ]]; 
do  
    LOOP=$((LOOP+1))
    INPUT="$1"
    if [[ -f "${INPUT}" ]]; then 
        PRIMARY_NAME="${INPUT%%.*}"
        EXTENSION_NAME="${INPUT##*.}"
        OBJ_FILE="${PRIMARY_NAME}"
        SRC_FILE="${INPUT}"
        if [[ "${EXTENSION_NAME}" == "c" ]]; then
            COMPILER="${CC}"
        elif [[ "${EXTENSION_NAME}" == "cpp" ]]; then
            COMPILER="${CPP}"
        else
            printf 'Source File \"%s\" Type unknown, Extension found: %s\n' "${INPUT}" "${EXTENSION_NAME}"
        fi
    else
        printf 'Source File: \"%s\" not found!\n' "${INPUT}"
        exit 2 
    fi
    if [[ -e "${OBJ_FILE}" ]]; then 
        printf 'INFO: remove old executable \"%s\"\n' "${OBJ_FILE}"
        rm ${OBJ_FILE} 
    fi 

    echo =====================================================================================
    printf '%s %s -o %s %s\n' "${COMPILER}" "${SRC_FILE}" "${OBJ_FILE}" "${CFLAGS}" 
    echo =====================================================================================
    ${COMPILER} ${SRC_FILE} -o ${OBJ_FILE} ${CFLAGS} 

    if [[ -f "${OBJ_FILE}" ]]; then 
        echo =====================================================================================
        ls -l ${OBJ_FILE}
    else
        printf '\nERROR: build failed, cannot find obj: %s\n' "${OBJ_FILE}"
        exit 9
    fi
    shift 1
done
