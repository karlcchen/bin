#
# file asc
#

EXE_NAME="`realpath $0`"
EXE_DIR="`dirname ${EXE_NAME}`"
ASCII_ESC_SRC="${EXE_DIR}/ascii-esc.sh"

if [ -f "${ASCII_ESC_SRC}" ] ; then  
    source ${ASCII_ESC_SRC} 
else 
    printf "\nERROR1: %s cannot find %s\n" "${EXE_NAME}" "${ASCII_ESC_SRC}"
    exit 1
fi

b_DEBUG=0
b_VERBOSE=0
if [[ "$1" == "--verbose" ]] ; then 
    b_VERBOSE=1
    shift 1
fi 
if [[ "$1" == "--debug" ]] ; then 
    b_DEBUG=1
    b_VERBOSE=1
    shift 1
fi 

CNT=1 
while [ ! -z "$1" ] ;
do 
    if [ "$1" = "red" ] ; then 
        printf "${AESC_COLOR_RED}"
    elif [ "$1" = "RED" ] ; then 
        printf "${AESC_COLOR_L_RED}"
#
    elif [ "$1" = "blue" ] ; then 
        printf "${AESC_COLOR_BLUE}"
    elif [ "$1" = "BLUE" ] ; then 
        printf "${AESC_COLOR_L_BLUE}"
#
    elif [ "$1" = "green" ] ; then 
        printf "${AESC_COLOR_GREEN}"
    elif [ "$1" = "GREEN" ] ; then 
        printf "${AESC_COLOR_L_GREEN}"
#
    elif [ "$1" = "cyan" ] ; then 
        printf "${AESC_COLOR_CYAN}"
    elif [ "$1" = "CYAN" ] ; then 
        printf "${AESC_COLOR_L_CYAN}"
#
    elif [ "$1" = "yellow" ] ; then 
        printf "${AESC_COLOR_YELLOW}"
    elif [ "$1" = "YELLOW" ] ; then 
        printf "${AESC_COLOR_L_YELLOW}"
#
    elif [ "$1" = "magenta" ] ; then 
        printf "${AESC_COLOR_MAGENTA}"
    elif [ "$1" = "MAGENTA" ] ; then 
        printf "${AESC_COLOR_L_MAGENTA}"
#
    elif [ "$1" = "default" ] ; then 
	printf "${AESC_COLOR_DEFAULT}"
#
    elif [ "$1" = "rst_fg" ] ; then 
        printf "${AESC_COLOR_RST_FG}"
#
    elif [ "$1" = "normal" ] ; then 
        printf "${AESC_SET_NORM}"
#
    elif [ "$1" = "bold" ] ; then 
        printf "${AESC_COLOR_SET_BLOD}"
#
    elif [ "$1" = "dim" ] ; then 
        printf "${AESC_SET_DIM}"
#
    elif [ "$1" = "reverse" ] ; then 
        printf "${AESC_SET_REVERSE}"
    elif [ "$1" = "unreverse" ] ; then 
        printf "${AESC_RST_REVERSE}"
#
    elif [ "$1" = "uline" ] ; then 
        printf "${AESC_SET_UNDERLINED}"
    elif [ "$1" = "unuline"  -o "$1" = "rst_uline" ] ; then 
        printf "${AESC_RST_UNDERLINED}"
    elif [ "$1" = "dual_uline" ] ; then 
        printf "${AESC_SET_D_UNDERLINED}"
#
    elif [ "$1" = "blink" -o "$1" = "rst_blink" ] ; then 
        printf "${AESC_SET_BLINK}"
    elif [ "$1" = "unblink" ] ; then 
        printf "${AESC_RST_BLINK}"
#
    elif [ "$1" = "reset" -o "$1" = "rst" ] ; then 
        printf "${AESC_RST_ALL}"
#
    elif [ "$1" = "help" -o "$1" = "--help" ] ; then 

	printf "\n Usage:\n ${AESC_COLOR_CYAN}${AESC_COLOR_RED}%s ${AESC_COLOR_GREEN} ANSI colors Escape code utility ${AESC_COLOR_CYAN}${AESC_RST_ALL}\n" "$(basename $0)" 
	printf "\n   Commands   Description:\n\n" 

	printf "${AESC_COLOR_GREEN} %10s ${AESC_RST_ALL} %10s\n" "help" "display help messages" 
        printf "${AESC_RST_ALL} %10s\n" "reset/rst"
        printf "${AESC_SET_BOLD} %10s ${AESC_SET_NORM} %10s\n" "bold" "normal"
        printf "${AESC_SET_D_UNDERLINED} %10s ${AESC_RST_ALL} %10s\n" "dual_uline" "reset"

        printf "${AESC_SET_UNDERLINED} %10s ${AESC_RST_UNDERLINED} %10s/%s\n" "uline" "unuline" "rst_uline" 
        printf "${AESC_SET_DIM} %10s ${AESC_SET_NORM} %10s\n" "dim" "normal"
        printf "${AESC_SET_BLINK} %10s ${AESC_RST_BLINK} %10s/%s\n" "blink" "unblink" "rst_blink"
        printf "${AESC_SET_REVERSE} %10s ${AESC_RST_REVERSE} %10s/%s\n" "reverse" "unreverse" "rst_reverse"

        printf "${AESC_COLOR_RED} %10s ${AESC_COLOR_RST_FG} %10s\n" "red" "rst_fg"
        printf "${AESC_COLOR_L_RED} %10s ${AESC_COLOR_DEFAULT} %10s\n" "RED" "default"

        printf "${AESC_COLOR_GREEN} %10s ${AESC_COLOR_DEFAULT} %10s\n" "green" "default"
        printf "${AESC_COLOR_L_GREEN} %10s ${AESC_COLOR_DEFAULT} %10s\n" "GREEN" "default"

        printf "${AESC_COLOR_YELLOW} %10s ${AESC_COLOR_DEFAULT} %10s\n" "yellow" "default"
        printf "${AESC_COLOR_L_YELLOW} %10s ${AESC_COLOR_DEFAULT} %10s\n" "YELLOW" "default"

        printf "${AESC_COLOR_BLUE} %10s ${AESC_COLOR_DEFAULT} %10s\n" "blue" "default"
        printf "${AESC_COLOR_L_BLUE} %10s ${AESC_COLOR_DEFAULT} %10s\n" "BLUE" "default"

        printf "${AESC_COLOR_MAGENTA} %10s ${AESC_COLOR_DEFAULT} %10s\n" "magenta" "default"
        printf "${AESC_COLOR_L_MAGENTA} %10s ${AESC_COLOR_DEFAULT} %10s\n" "MAGENTA" "default"

        printf "${AESC_COLOR_CYAN} %10s ${AESC_COLOR_DEFAULT} %10s\n" "cyan" "default"
        printf "${AESC_COLOR_L_CYAN} %10s ${AESC_COLOR_DEFAULT} %10s\n" "CYAN" "default"
#
        printf "${AESC_COLOR_D_GREY} %10s ${AESC_COLOR_DEFAULT} %10s\n" "grey" "default"

        printf "${AESC_COLOR_L_GREY} %10s ${AESC_COLOR_RST_FG} %10s\n" "GREY" "rst_fg"

        printf "${AESC_COLOR_WHITE} %10s ${AESC_COLOR_RST_FG} %10s\n" "white" "rst_fg"

        printf "${AESC_RST_ALL} %10s\n" "reset/rst"

	printf "\n Examples:\n"
	printf " > asc blink ${AESC_SET_BLINK}${AESC_COLOR_L_RED}RED${AESC_RST_ALL}\t# set text dsiplay with ANSI color RED with blinking\n"
	printf " > asc reset\t\t# reset ANSI color to normal\n"
	echo 
    else
	if [ ${b_VERBOSE} -ne 0 ] ; then  
		printf "\nERROR1: %s unknown command #%d: \"%s\"\n" "${EXE_NAME}" ${CNT} "$1"
	fi
    fi 
#
    CNT=$((CNT+1))
    shift 1
done 

