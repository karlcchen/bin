#
# file asc
#

EXE_NAME="`realpath $0`"
EXE_DIR="`dirname ${EXE_NAME}`"
ASCII_ESC_SRC="${EXE_DIR}/ascii-esc.sh"

if [ -f "${ASCII_ESC_SRC}" ] ; then  
	source ${ASCII_ESC_SRC} 
else 
	printf "\nERROR1: %s cannot find %s\n" "${EXE_NAME}" "${ASCII_ESC_SRC}"
	exit 1
fi

b_DEBUG=0
b_VERBOSE=0
if [ "$1" == "--verbose" ] ; then 
	b_VERBOSE=1
	shift 1
fi 
if [ "$1" == "--debug" ] ; then 
	b_DEBUG=1
	b_VERBOSE=1
	shift 1
fi 

CNT=1 
while [ ! -z "$1" ] ;
do 
    if [ "$1" = "red" ] ; then 
        printf "${AESC_COLOR_RED}"
    elif [ "$1" = "RED" ] ; then 
        printf "${AESC_COLOR_L_RED}"
#
    elif [ "$1" = "blue" ] ; then 
        printf "${AESC_COLOR_BLUE}"
    elif [ "$1" = "BLUE" ] ; then 
        printf "${AESC_COLOR_L_BLUE}"
#
    elif [ "$1" = "green" ] ; then 
        printf "${AESC_COLOR_GREEN}"
    elif [ "$1" = "GREEN" ] ; then 
        printf "${AESC_COLOR_L_GREEN}"
#
    elif [ "$1" = "cyan" ] ; then 
        printf "${AESC_COLOR_CYAN}"
    elif [ "$1" = "CYAN" ] ; then 
        printf "${AESC_COLOR_L_CYAN}"
#
    elif [ "$1" = "yellow" ] ; then 
        printf "${AESC_COLOR_YELLOW}"
    elif [ "$1" = "YELLOW" ] ; then 
        printf "${AESC_COLOR_L_YELLOW}"
#
    elif [ "$1" = "magenta" ] ; then 
        printf "${AESC_COLOR_MAGENTA}"
    elif [ "$1" = "MAGENTA" ] ; then 
        printf "${AESC_COLOR_L_MAGENTA}"
#
    elif [ "$1" = "default" ] ; then 
        printf "${AESC_COLOR_RST_FG}"
#
    elif [ "$1" = "norm" ] ; then 
        printf "${AESC_SET_NORM}"
#
    elif [ "$1" = "bold" ] ; then 
        printf "${AESC_COLOR_SET_BLOD}"
#
    elif [ "$1" = "dim" ] ; then 
        printf "${AESC_SET_DIM}"
#
    elif [ "$1" = "reverse" ] ; then 
        printf "${AESC_SET_REVERSE}"
    elif [ "$1" = "unreverse" ] ; then 
        printf "${AESC_RST_REVERSE}"
#
    elif [ "$1" = "uline" ] ; then 
        printf "${AESC_SET_UNDERLINED}"
    elif [ "$1" = "unuline" ] ; then 
        printf "${AESC_RST_UNDERLINED}"
#
    elif [ "$1" = "blink" ] ; then 
        printf "${AESC_SET_BLINK}"
    elif [ "$1" = "unblink" ] ; then 
        printf "${AESC_RST_BLINK}"
#
    elif [ "$1" == "reset" ] ; then 
        printf "${AESC_RST_ALL}"
#
    elif [ "$1" == "test" ] ; then 
	echo 
        printf "${AESC_RST_ALL} Reset All\n"
        printf "${AESC_SET_BOLD} BOLD ${AESC_SET_NORM} Normal\n"
        printf "${AESC_SET_D_UNDERLINED} DOUBLE UNDERLINED ${AESC_RST_ALL} Reset All\n"

        printf "${AESC_SET_UNDERLINED} UNDERLINED ${AESC_RST_UNDERLINED} UnUNDERLINED\n"
        printf "${AESC_SET_DIM} DIM ${AESC_SET_NORM} Normal\n"
        printf "${AESC_SET_BLINK} BLINK ${AESC_RST_BLINK} UnBLINK\n"
        printf "${AESC_SET_REVERSE} REVSRSE ${AESC_RST_REVERSE} unREVERSE\n"

        printf "${AESC_COLOR_RED} RED ${AESC_COLOR_DEFAULT} Default\n"
        printf "${AESC_COLOR_L_RED} LIGHT RED ${AESC_COLOR_DEFAULT} Default\n"

        printf "${AESC_COLOR_GREEN} GREEN ${AESC_COLOR_DEFAULT} Default\n"
        printf "${AESC_COLOR_L_GREEN} LIGHT GREEN ${AESC_COLOR_DEFAULT} Default\n"


        printf "${AESC_COLOR_YELLOW} YELLOW ${AESC_COLOR_DEFAULT} Default\n"
        printf "${AESC_COLOR_L_YELLOW} LIGHT YELLOW ${AESC_COLOR_DEFAULT} Default\n"

        printf "${AESC_COLOR_BLUE} BLUE ${AESC_COLOR_DEFAULT} Default\n"
        printf "${AESC_COLOR_L_BLUE} LIGHT BLUE ${AESC_COLOR_DEFAULT} Default\n"

        printf "${AESC_COLOR_MAGENTA} MAGENTA ${AESC_COLOR_DEFAULT} Default\n"
        printf "${AESC_COLOR_L_MAGENTA} LIGHT MAGENTA ${AESC_COLOR_DEFAULT} Default\n"

        printf "${AESC_COLOR_CYAN} CYAN ${AESC_COLOR_DEFAULT} Default\n"
        printf "${AESC_COLOR_L_CYAN} LIGHT CYAN ${AESC_COLOR_DEFAULT} Default\n"
#
        printf "${AESC_COLOR_D_GREY} DARK  GREY ${AESC_COLOR_DEFAULT} Default\n"
        printf "${AESC_COLOR_L_GREY} LIGHT GREY ${AESC_COLOR_DEFAULT} Default\n"

        printf "${AESC_COLOR_WHITE} WHITE ${AESC_COLOR_DEFAULT} Default\n"

        printf "${AESC_RST_ALL} Reset All\n"
	echo
    else
	if [ ${b_VERBOSE} -ne 0 ] ; then  
		printf "\nERROR1: %s unknown command #%d: \"%s\"\n" "${EXE_NAME}" ${CNT} "$1"
	fi
    fi 
#
    CNT=$((CNT+1))
    shift 1
done 

